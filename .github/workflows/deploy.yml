name: Deploy Azure Speed Test to Production

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AZURE_WEBAPP_NAME: azure-speed-test-taiwan
  AZURE_RESOURCE_GROUP: azure-speed-test-prod
  NODE_VERSION: '18.x'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
    
    - name: Install dependencies
      run: |
        cd ui
        npm ci
    
    - name: Build Angular app
      run: |
        cd ui
        npm run build --prod
    
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ui/dist/
        retention-days: 1

  build-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: |
        cd api/AzureSpeed
        dotnet restore
    
    - name: Build backend
      run: |
        cd api/AzureSpeed
        dotnet build --configuration Release --no-restore
    
    - name: Test backend
      run: |
        cd api/AzureSpeed
        dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Publish backend
      run: |
        cd api/AzureSpeed
        dotnet publish --configuration Release --no-build --output ./publish
    
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: api/AzureSpeed/publish/
        retention-days: 1

  deploy-to-azure:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: ./backend-build
    
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend-build
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy backend to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ./backend-build
    
    - name: Deploy frontend to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./frontend-build"
        output_location: ""
        skip_app_build: true

  notify-deployment:
    needs: [deploy-to-azure]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-to-azure.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
          echo "üåê Frontend: https://${{ env.AZURE_WEBAPP_NAME }}-frontend.azurestaticapps.net"
          echo "üîó Backend: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        else
          echo "‚ùå Deployment failed!"
        fi
